@model EXPEDIT.Transactions.ViewModels.SoftwareSubmissionViewModel
@Html.Partial("Header")
@using Braintree;
@{
    Style.Require("Transactions");
    HtmlHelper.ClientValidationEnabled = true;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;
    Layout.Title = T("Submit Software").ToString();
}
@using (Html.BeginForm("SubmitSoftware", "User", new { area = "EXPEDIT.Transactions" }, FormMethod.Post, new { id = "form1", @class = "form" }))
{
<article class="content-item page">
    <header><h1>@Layout.Title</h1></header>
    <fieldset>
    @*<legend></legend>*@
    <div class="editor-label">
        <p>Please describe your software:</p>
    </div>
    <div class="editor-field">
    @Html.TextArea("Text", "TEST TEXT", 12, 80,
	 new Dictionary<string,object> {
		{"class", "html tinymce"},	
        {"style", "width:100%"}
	 })
    </div>
    <div class="editor-label">
        <p style="margin-top:9px;">Upload supporting files:</p>
    </div>
    <div class="editor-field">
    <!-- The file upload form used as target for the file upload widget -->
    <div id="fileupload">
        @Html.AntiForgeryToken()
        <!-- Redirect browsers with JavaScript disabled to the origin page -->
        @*<noscript><input type="hidden" name="redirect" value="http://blueimp.github.io/jQuery-File-Upload/"></noscript>*@
        <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
        <div class="row fileupload-buttonbar" style="margin-left:0px;">
            <div class="col-lg-7">
                <!-- The fileinput-button span is used to style the file input field as button -->
                <span class="btn btn-success fileinput-button">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>Add files...</span>
                    <input type="file" name="files[]" multiple>
                </span>
                <button type="submit" class="btn btn-primary start">
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start upload</span>
                </button>
                @*<button type="reset" class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel upload</span>
                </button>
                <button type="button" class="btn btn-danger delete">
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" class="toggle">*@
                <!-- The global file processing state -->
                <span class="fileupload-process"></span>
            </div>
            <!-- The global progress state -->
            <div class="col-lg-5 fileupload-progress fade">
                <!-- The global progress bar -->
                <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                    <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                </div>
                <!-- The extended global progress state -->
                <div class="progress-extended">&nbsp;</div>
            </div>
        </div>
        <!-- The table listing the files available for upload/download -->
        <table role="presentation" class="table table-striped"><tbody class="files"></tbody></table>
    </div>
    </div></fieldset>
    <input type="submit" value="Submit" />
    </article>
}
<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
        <td>
            <span class="preview"></span>
        </td>
        <td>
            <p class="name">{%=file.name%}</p>
            <strong class="error text-danger"></strong>
        </td>
        <td>
            <p class="size">Processing...</p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
        </td>
        <td>
            {% if (!i && !o.options.autoUpload) { %}
                <button class="btn btn-primary start" disabled>
                    <i class="glyphicon glyphicon-upload"></i>
                    <span>Start</span>
                </button>
            {% } %}
            {% if (!i) { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
{% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
        <td>
            <span class="preview">
                {% if (file.thumbnailUrl) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
                {% } %}
            </span>
        </td>
        <td>
            <p class="name">
                {% if (file.url) { %}
                    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
                {% } else { %}
                    <span>{%=file.name%}</span>
                {% } %}
            </p>
            {% if (file.error) { %}
                <div><span class="label label-danger">Errork</span> {%=file.error%}</div>
            {% } %}
        </td>
        <td>
            <span class="size">{%=o.formatFileSize(file.size)%}</span>
        </td>
        <td>
            {% if (file.deleteUrl) { %}
                <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}"{% if (file.deleteWithCredentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
                    <i class="glyphicon glyphicon-trash"></i>
                    <span>Delete</span>
                </button>
                <input type="checkbox" name="delete" value="1" class="toggle">
            {% } else { %}
                <button class="btn btn-warning cancel">
                    <i class="glyphicon glyphicon-ban-circle"></i>
                    <span>Cancel</span>
                </button>
            {% } %}
        </td>
    </tr>
{% } %}
</script>

<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.fileupload.js")"></script>
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.fileupload-ui.js")"></script>
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.iframe-transport.js")"></script>
<!-- The Templates plugin is included to render the upload/download listings -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/tmpl.min.js")"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/load-image.min.js")"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/canvas-to-blob.min.js")"></script>
<!-- blueimp Gallery script -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.blueimp-gallery.min.js")"></script>
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.iframe-transport.js")"></script>
<!-- The basic File Upload plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.fileupload.js")"></script>
<!-- The File Upload processing plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.fileupload-process.js")"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.fileupload-image.js")"></script>
<!-- The File Upload audio preview plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.fileupload-audio.js")"></script>
<!-- The File Upload video preview plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.fileupload-video.js")"></script>
<!-- The File Upload validation plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.fileupload-validate.js")"></script>
<!-- The File Upload user interface plugin -->
<script src="@Url.Content("~/Modules/EXPEDIT.Transactions/Scripts/jquery.fileupload-ui.js")"></script>

<link href="@Url.Content("~/Modules/EXPEDIT.Transactions/Styles/blueimp-gallery.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Modules/EXPEDIT.Transactions/Styles/jquery.fileupload-ui.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Modules/EXPEDIT.Transactions/Styles/jquery.fileupload.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Modules/EXPEDIT.Transactions/Styles/bootstrap.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Themes/MAS1/Styles/site.css")" rel="stylesheet" type="text/css" />



<script src="@Url.Content("~/Modules/TinyMce/Scripts/tiny_mce.js")"></script>
<script src="@Url.Content("~/Modules/TinyMce/Scripts/tiny_mce_src.js")"></script>
<script type="text/javascript">
    tinyMCE.init({
        theme: "advanced",
        mode: "specific_textareas",
        editor_selector: "tinymce",
        plugins: "fullscreen,autoresize,searchreplace,mediapicker,inlinepopups",
        theme_advanced_toolbar_location: "top",
        theme_advanced_toolbar_align: "left",
        theme_advanced_buttons1: "search,replace,|,cut,copy,paste,|,undo,redo,|,link,unlink,charmap,emoticon,codeblock,|,bold,italic,|,numlist,bullist,formatselect,|,code,fullscreen",
        theme_advanced_buttons2: "",
        theme_advanced_buttons3: "",
        convert_urls: false,
        valid_elements: "*[*]",
        // shouldn't be needed due to the valid_elements setting, but TinyMCE would strip script.src without it.
        extended_valid_elements: "script[type|defer|src|language]"
    });
</script>



 <script type="text/javascript">
     // just for the demos, avoids form submit
     jQuery.validator.setDefaults({
         debug: false,
         success: "valid"
     });
     $("#payment-form").validate({
         rules: {
             "customer[credit_card][expiration_date]": {
                 required: true,
                 dateCC: true
             },
             "customer[credit_card][number]": {
                 required: true,
                 creditcard: true
             },
             "customer[email]": {
                 required: true,
                 email2: true
             },
         },
         submitHandler: function (form) {
             form.submit();
         }
     });



     // jqXHRData needed for grabbing by data object of fileupload scope
     var jqXHRData;     

     $(document).ready(function () {

         //Initialization of fileupload
         initSimpleFileUpload();

         //Handler for "Start upload" button 
         $("#hl-start-upload").on('click', function () {
             if (jqXHRData) {
                 jqXHRData.submit();
             }
             return false;
         });
     });

     function initSimpleFileUpload() {
         'use strict';

         ////// Initialize the jQuery File Upload widget:
         //$('#fileupload').fileupload({
         //    // Uncomment the following to send cross-domain cookies:
         //    //xhrFields: {withCredentials: true},
         //    url: '/store/user/uploadfile'
         //});

         $('#fileupload').fileupload({
             url: '/store/user/uploadfile',
             dataType: 'json',
             autoUpload: true,
             //add: function (e, data) {
             //    jqXHRData = data;
             //    data.process();
             //},
             //done: function (event, data) {
             //    if (data.result.isUploaded) {

             //    }
             //    else {
             //        alert(data.result.message);
             //    }                 
             //},
             //fail: function (event, data) {
             //    if (data.files[0].error) {
             //        alert(data.files[0].error);
             //    }
             //},
             formData: function (form) {
                 return [{ name: "__RequestVerificationToken", value: $('input[name="__RequestVerificationToken"]').val()}]
             }
         });

         // Enable iframe cross-domain access via redirect option:
         //$('#fileupload').fileupload(
         //    'option',
         //    'redirect',
         //    window.location.href.replace(
         //        /\/[^\/]*$/,
         //        '/cors/result.html?%s'
         //    )
         //);

       
         $('#fileupload').addClass('fileupload-processing');
         $.ajax({
             // Uncomment the following to send cross-domain cookies:
             //xhrFields: {withCredentials: true},
             type: "POST",
             url: $('#fileupload').fileupload('option', 'url'),
             dataType: 'json',
             data: { __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
             context: $('#fileupload')[0]
         }).always(function () {
             $(this).removeClass('fileupload-processing');
         }).done(function (result) {
             $(this).fileupload('option', 'done')
                 .call(this, $.Event('done'), { result: result });
         });

     }


     //$(function () {
     //    'use strict';

     //    // Initialize the jQuery File Upload widget:
     //    $('#fu-my-file').fileupload();

     //    $('#fu-my-file').fileupload('option', {
     //        autoUpload: true,
     //        url: '/store/user/uploadfile',
     //        dataType: 'json',
     //    //maxFileSize: 2000000, // Size in Bytes – 2 MB
     //    add: function (e, data) {
     //        var goUpload = true;
     //        var uploadFile = data.files[0];

     //        if (!(/\.(gif|jpg|jpeg|tiff|png|csv|pdf)$/i).test(uploadFile.name)) {
     //            alert('Wrong type');
     //            goUpload = false;
     //        } else if (uploadFile.size > 2000000) { // 2mb
     //            alert('Please upload a smaller file, max size is 2 MB');
     //            goUpload = false;
     //        }
     //        else {
     //            alert(uploadFile.name);
     //        }

     //        if (goUpload == true) {
     //            //showLoader();
     //            var jqXHR = data.submit()
     //            .success(function (result, textStatus, jqXHR) {

     //                if (result.isValid) {

     //                }
     //                else {

     //                }
     //            })
     //            .error(function (jqXHR, textStatus, errorThrown) {
     //                if (typeof (jqXHR) != 'undefined' || typeof (textStatus) != 'undefined' || typeof (errorThrown) != 'undefined') {
     //                    alert(textStatus + errorThrown + jqXHR);
     //                }
     //            });
     //        }
     //    },
     //    fail: function (event, data) {
     //        if (data.files[0].error) {
     //            alert(data.files[0].error);
     //        }
     //    }
     //});
     //});


</script>